[{"C:\\Users\\user\\Documents\\GitHub\\chang-jun\\src\\index.js":"1","C:\\Users\\user\\Documents\\GitHub\\chang-jun\\src\\reportWebVitals.js":"2","C:\\Users\\user\\Documents\\GitHub\\chang-jun\\src\\App.js":"3","C:\\Users\\user\\Documents\\GitHub\\chang-jun\\src\\React\\Hello.js":"4","C:\\Users\\user\\Documents\\GitHub\\chang-jun\\src\\React\\Intro.js":"5","C:\\Users\\user\\Documents\\GitHub\\chang-jun\\src\\React\\Project.js":"6","C:\\Users\\user\\Documents\\GitHub\\chang-jun\\src\\React\\Modal\\GaapModal.js":"7","C:\\Users\\user\\Documents\\GitHub\\chang-jun\\src\\React\\Modal\\GDModal.js":"8","C:\\Users\\user\\Documents\\GitHub\\chang-jun\\src\\React\\Modal\\YttModal.js":"9","C:\\Users\\user\\Documents\\GitHub\\chang-jun\\src\\React\\Modal\\QRModal.js":"10"},{"size":500,"mtime":499162500000,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"12"},{"size":329,"mtime":1609678046073,"results":"14","hashOfConfig":"12"},{"size":1193,"mtime":1609610500523,"results":"15","hashOfConfig":"12"},{"size":4826,"mtime":1609695231750,"results":"16","hashOfConfig":"12"},{"size":5279,"mtime":1609695165257,"results":"17","hashOfConfig":"12"},{"size":1702,"mtime":1609692941319,"results":"18","hashOfConfig":"12"},{"size":1223,"mtime":1609692868822,"results":"19","hashOfConfig":"12"},{"size":1464,"mtime":1609692833984,"results":"20","hashOfConfig":"12"},{"size":2503,"mtime":1609692785057,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"72w3ki",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"24"},"C:\\Users\\user\\Documents\\GitHub\\chang-jun\\src\\index.js",[],["50","51"],"C:\\Users\\user\\Documents\\GitHub\\chang-jun\\src\\reportWebVitals.js",[],"C:\\Users\\user\\Documents\\GitHub\\chang-jun\\src\\App.js",[],"C:\\Users\\user\\Documents\\GitHub\\chang-jun\\src\\React\\Hello.js",["52","53","54","55","56","57"],"import React, { useEffect, useState } from 'react';\r\nimport { useSpring, animated } from 'react-spring'\r\nimport '../App.css';\r\n\r\nconst Hello = () => {\r\n    const [lang, setlang] = useState('Flutter');\r\n    const [state, setState] = useState(false);\r\n\r\n    const props = useSpring({\r\n        fontWeight: 'bold',\r\n        config: { duration: 1400 },\r\n        opacity: state == true ? 0 : 1,\r\n        from: { opacity: state == true ? 1 : 0 },\r\n    })\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            if (lang == 'Flutter') {\r\n                setlang('React-native');\r\n            }\r\n            else if (lang == 'React-native') {\r\n                setlang('하이브리드 앱');\r\n            } else if (lang == '하이브리드 앱') {\r\n                setlang('Flutter');\r\n            }\r\n        }, 3800)\r\n\r\n\r\n    }, [lang])\r\n\r\n    function LangAnimation() {\r\n        setTimeout(() => {\r\n            setState(!state)\r\n        }, 1900)\r\n    }\r\n\r\n    useEffect(() => {\r\n        LangAnimation();\r\n    }, [state])\r\n\r\n    return <div><animated.div style={props}>{lang}</animated.div> Front-End Developer <br /> 김창준의 포트폴리오 입니다</div>\r\n}\r\n\r\nexport default Hello;","C:\\Users\\user\\Documents\\GitHub\\chang-jun\\src\\React\\Intro.js",[],"C:\\Users\\user\\Documents\\GitHub\\chang-jun\\src\\React\\Project.js",["58","59","60","61","62","63","64","65"],"import React, { useState, useEffect } from 'react';\r\nimport gaap_Logo from \"../Image/gaap_Splash.png\";\r\nimport '../App.css';\r\n\r\nimport GaapModal from \"./Modal/GaapModal\";\r\nimport GDModal from \"./Modal/GDModal\";\r\nimport YttModal from \"./Modal/YttModal\";\r\nimport QRModal from \"./Modal/QRModal\";\r\n\r\nimport GD from \"../Image/GD.png\";\r\nimport Ytt from \"../Image/Ytt.png\";\r\nimport QR_B from \"../Image/QR_B.png\";\r\n\r\nimport X from \"../Image/X.png\";\r\nconst Project = () => {\r\n\r\n    const [modalVisibleGaap, setModalVisibleGaap] = useState(false);\r\n    const [modalVisibleGD, setModalVisibleGD] = useState(false);\r\n    const [modalVisibleYtt, setModalVisibleYtt] = useState(false);\r\n    const [modalVisibleQR, setModalVisibleQR] = useState(false);\r\n\r\n    const [modalVisible, setModalVisible] = useState(false);\r\n    const [clickResult, setClickResult] = useState('');\r\n    const SwitchVisible = ({ click }) => {\r\n        if (click == 'gaap') setModalVisibleGaap(!modalVisibleGaap)\r\n        if (click == 'GD') setModalVisibleGD(!modalVisibleGD)\r\n        if (click == 'Ytt') setModalVisibleYtt(!modalVisibleYtt)\r\n        if (click == 'QR') setModalVisibleQR(!modalVisibleQR)\r\n        setModalVisible(!modalVisible)\r\n    }\r\n\r\n    const clickEvent = ({ click }) => {\r\n        console.log(click)\r\n        SwitchVisible({ click: click });\r\n        setClickResult(click);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (modalVisible) document.body.style.overflow = 'hidden';\r\n        else document.body.style.overflow = 'unset';\r\n    }, [modalVisible]);\r\n\r\n    return <div className='Project'>\r\n        <div>\r\n            <p className='Project-Title'>PROJECT</p>\r\n        </div>\r\n        {modalVisible ? <div className='Modal'>\r\n            <div className='Modal-False'> <img className='X_btn' src={X} alt='x' onClick={() => { SwitchVisible({ click: clickResult }); }} /></div>\r\n            <div className='Modal-Inner'>\r\n                <p className='Modal-Inner-Title'>More Information</p>\r\n                <div>\r\n                    {clickResult == 'gaap' && <GaapModal />}\r\n                    {clickResult == 'GD' && < GDModal />}\r\n                    {clickResult == 'Ytt' && < YttModal />}\r\n                    {clickResult == 'QR' && < QRModal />}\r\n                </div>\r\n            </div>\r\n        </div> : null}\r\n        <div className='Project-List'>\r\n            <div className='Project-Details' onClick={() => { clickEvent({ click: 'gaap' }); }}>\r\n                <img className='App-Logo' src={gaap_Logo} alt='gaap' />\r\n                <div className='App-Text'>\r\n                    <p className='App-Text-Title'>Gaap</p>\r\n                    <p>League of Legends 전적 검색 및 게임중인 소환사 비교 + 커뮤니티\r\n                        <br />2020/05 ~ 2020/07\r\n                        <br />Flutter\r\n                    </p>\r\n                </div>\r\n            </div>\r\n\r\n            <div className='Project-Details' onClick={() => { clickEvent({ click: 'GD' }) }}>\r\n                <img className='App-Logo' src={GD} alt='배달앱' />\r\n                <div className='App-Text'>\r\n                    <p className='App-Text-Title'>배달 앱</p>\r\n                    <p>매장에서 음식 장바구니에 담기까지 개발\r\n                    <br />2020/08 ~ 2020/09\r\n                    <br />React Native \r\n                    </p>\r\n                </div>\r\n            </div>\r\n            <div className='Project-Details' onClick={() => { clickEvent({ click: 'Ytt' }) }}>\r\n                <img className='App-Logo' src={Ytt} alt='Ytt' />\r\n                <div className='App-Text'>\r\n                    <p className='App-Text-Title'>어제 오늘 내일</p>\r\n                    <p>어제 오늘 내일에 대한 날씨를 확인하는 앱\r\n                    <br />2020/07 ~ 2020/09\r\n                        <br />React Native\r\n                    </p>\r\n                </div>\r\n            </div>\r\n            <div className='Project-Details' onClick={() => { clickEvent({ click: 'QR' }) }}>\r\n                <img className='App-Logo' src={QR_B} alt='QR_B' />\r\n                <div className='App-Text'>\r\n                    <p className='App-Text-Title'>QR 체크 앱</p>\r\n                    <p>매장에 QR코드를 부착하여 이용하는 개인용, 사업자용 앱\r\n                        <br />2020/10 ~ 2020/12\r\n                        <br />React Native\r\n                    </p>\r\n                </div>\r\n            </div>\r\n            <div className='Project-Details'>\r\n                <div className='App-Logo' alt='etc' />\r\n                <div className='App-Text'>\r\n                    <p className='App-Text-Title'>ETC</p>\r\n                    <p>Flutter {'>'} Google Maps api를 이용한 위치 확인 및 경로 구하기\r\n                        <br />React Native {'>'} firebase를 이용하여 google 및 Apple Authentication, 카카오 로그인\r\n                        <br />Python {'>'} face recognition을 이용한 영상 및 사진에서 얼굴 검출,\r\n                        중고나라 + 번개장터 크롤링을 통한 에어팟 중고거래 가격 예측\r\n                        <br />\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Project;\r\n","C:\\Users\\user\\Documents\\GitHub\\chang-jun\\src\\React\\Modal\\GaapModal.js",["66"],"import React from 'react';\r\n\r\nimport '../../App.css';\r\nimport image0 from \"../../Image/gaap/0.jpg\";\r\nimport image1 from \"../../Image/gaap/1.jpg\";\r\nimport image2 from \"../../Image/gaap/2.jpg\";\r\nimport image3 from \"../../Image/gaap/3.jpg\";\r\nimport image4 from \"../../Image/gaap/4.jpg\";\r\nimport image5 from \"../../Image/gaap/5.jpg\";\r\nimport image6 from \"../../Image/gaap/6.jpg\";\r\nimport image7 from \"../../Image/gaap/7.jpg\";\r\nimport image8 from \"../../Image/gaap/8.jpg\";\r\nimport image9 from \"../../Image/gaap/9.jpg\";\r\n\r\n\r\nconst GaapModal = () => {\r\n    const data = [image0, image1, image2, image3, image4, image5, image6, image7, image8, image9]\r\n\r\n    return <div>\r\n        <div className='Modal-Image-List' >\r\n            {data.map((imgs, i) => {\r\n                return <img className='Modal-Image' src={imgs} key={i} onClick={() => {\r\n                    window.open(imgs);\r\n                }} />\r\n            })}\r\n        </div>\r\n        <div className='Modal-Details-Text'>\r\n            <p> <li>Google Sign-In과 LOL소환사명을 사용해서 로그인 합니다.</li>\r\n                <li>로그아웃을 하기 전까지 앱 실행시 자동으로 로그인 합니다.</li>\r\n                <li>소환사명 검색 및 전적 확인을 할수 있습니다.</li>\r\n                <li>게임중인 소환사명을 검색하여 인게임 정보를 볼 수 있습니다.</li>\r\n                <li>챔피언 추천 아이템 스킬트리 승률 등을 볼 수 있습니다.</li>\r\n                <li>게시판을 구현했습니다.</li>\r\n                <li>Google Admob을 이용해서 광고를 보여줍니다.</li>\r\n            </p>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default GaapModal;\r\n","C:\\Users\\user\\Documents\\GitHub\\chang-jun\\src\\React\\Modal\\GDModal.js",["67"],"import React from 'react';\r\n\r\nimport '../../App.css';\r\nimport image0 from \"../../Image/GD/0.png\";\r\nimport image1 from \"../../Image/GD/1.png\";\r\nimport image2 from \"../../Image/GD/2.png\";\r\nimport image3 from \"../../Image/GD/3.png\";\r\nimport image4 from \"../../Image/GD/4.png\";\r\nimport image5 from \"../../Image/GD/5.png\";\r\nimport image6 from \"../../Image/GD/6.png\";\r\n\r\n\r\nconst GDModal = () => {\r\n    const data = [image0, image1, image2, image3, image4, image5, image6]\r\n\r\n    return <div>\r\n        <div className='Modal-Image-List' >\r\n            {data.map((imgs, i) => { return <img className='Modal-Image' src={imgs} key={i} onClick={() => {\r\n                    window.open(imgs);\r\n                }}/> })}\r\n        </div>\r\n        <div className='Modal-Details-Text'>\r\n            <p> <li>JSON에서 받아온 값을 이용하여 매장 목록을 확인합니다.</li>\r\n                <li>useContext를 이용하여 장바구니 구현했습니다.</li>\r\n                <li>swiper를 이용한 광고 및 공지사항 화면을 제작했습니다.</li>\r\n                <li>다양한 navigation을 이용해서 화면이동을 합니다.</li>\r\n            </p>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default GDModal;\r\n","C:\\Users\\user\\Documents\\GitHub\\chang-jun\\src\\React\\Modal\\YttModal.js",["68"],"import React from 'react';\r\n\r\nimport '../../App.css';\r\nimport image0 from \"../../Image/Ytt/0.jpg\";\r\nimport image1 from \"../../Image/Ytt/1.jpg\";\r\nimport image2 from \"../../Image/Ytt/2.jpg\";\r\nimport image3 from \"../../Image/Ytt/3.jpg\";\r\nimport image4 from \"../../Image/Ytt/4.jpg\";\r\nimport image5 from \"../../Image/Ytt/5.jpg\";\r\n\r\n\r\n\r\nconst YttModal = () => {\r\n    const data = [image0, image1, image2, image3, image4, image5]\r\n\r\n    return <div>\r\n        <div className='Modal-Image-List' > \r\n            {data.map((imgs, i) => {\r\n                return <img className='Modal-Image' src={imgs} key={i} onClick={() => {\r\n                    window.open(imgs);\r\n                }} />\r\n            })}\r\n        </div>\r\n        <div className='Modal-Details-Text'>\r\n            <p>\r\n                <li>geolocation를 이용하여 기기의 lat long 값을 확인합니다.</li>\r\n                <li>reverse geolocation를 이용하여 기기의 위치명을 얻습니다.</li>\r\n                <li>openweathermap api를 이용하여 날씨 표시합니다.</li>\r\n                <li>async storage로 위치를 저장하고 불러옵니다.</li>\r\n                <li>native ad를사용해서 광고를 표시합니다.</li>\r\n                <li><a href='https://play.google.com/store/apps/details?id=com.loger.ytt'\r\n                    target='blank'>Google Play</a> 에서 확인하기</li>\r\n            </p>\r\n        </div>\r\n    </div >\r\n}\r\n\r\nexport default YttModal;\r\n",["69","70"],"C:\\Users\\user\\Documents\\GitHub\\chang-jun\\src\\React\\Modal\\QRModal.js",["71"],"import React from 'react';\r\n\r\nimport '../../App.css';\r\nimport image0 from \"../../Image/QR/0.jpg\";\r\nimport image1 from \"../../Image/QR/1.jpg\";\r\nimport image2 from \"../../Image/QR/2.jpg\";\r\nimport image3 from \"../../Image/QR/3.jpg\";\r\nimport image4 from \"../../Image/QR/4.jpg\";\r\nimport image5 from \"../../Image/QR/5.jpg\";\r\nimport image6 from \"../../Image/QR/6.jpg\";\r\nimport image7 from \"../../Image/QR/7.jpg\";\r\nimport image8 from \"../../Image/QR/8.jpg\";\r\nimport image9 from \"../../Image/QR/9.jpg\";\r\nimport image10 from \"../../Image/QR/10.jpg\";\r\nimport image11 from \"../../Image/QR/11.jpg\";\r\nimport image12 from \"../../Image/QR/12.jpg\";\r\nimport image13 from \"../../Image/QR/13.jpg\";\r\nimport image14 from \"../../Image/QR/14.jpg\";\r\nimport image15 from \"../../Image/QR/15.jpg\";\r\n\r\n\r\nconst QRModal = () => {\r\n    const data = [image0, image1, image2, image3, image4, image5, image6, image7, image8, image9, image10, image11, image12, image13, image14, image15]\r\n\r\n    return <div>\r\n        <div className='Modal-Image-List' >\r\n            {data.map((imgs, i) => {\r\n                return <img className='Modal-Image' src={imgs} key={i} onClick={() => {\r\n                    window.open(imgs);\r\n                }} />\r\n            })}\r\n        </div>\r\n        <div className='Modal-Details-Text'>\r\n            <p>\r\n                <li>개인용과 사업자용으로 나눠져 있습니다.</li>\r\n                <li>개인용 앱에서 문자를 통해 인증을 받아 로그인 합니다.</li>\r\n                <li>QR코드 인식 후 데이터 전송 및 저장합니다.</li>\r\n                <li>async storage로 방문장소를 관리합니다.</li>\r\n                <li>사업자용 앱에서 QR인식 결과를 확인합니다.</li>\r\n                <li>socket을 이용하여 QR체크시 바로 확인 가능합니다.</li>\r\n                <li>사업자 회원가입 시 네이버OCR, 카카오 우편번호 서비스를 이용합니다.</li>\r\n                <li>같은 사업자 번호로 직원 추가 등록 및 삭제가 가능합니다.</li>\r\n                <li><a href='https://play.google.com/store/apps/details?id=com.loger.business_qari'\r\n                    target='blank'>Google Play</a> 에서 사업주용 확인하기</li>\r\n                <li><a href='https://play.google.com/store/apps/details?id=com.loger.person_qari'\r\n                    target='blank'>Google Play</a> 에서 개인용 확인하기</li>\r\n            </p>\r\n        </div>\r\n    </div >\r\n}\r\n\r\nexport default QRModal;\r\n",{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":12,"column":24,"nodeType":"78","messageId":"79","endLine":12,"endColumn":26},{"ruleId":"76","severity":1,"message":"77","line":13,"column":32,"nodeType":"78","messageId":"79","endLine":13,"endColumn":34},{"ruleId":"76","severity":1,"message":"77","line":18,"column":22,"nodeType":"78","messageId":"79","endLine":18,"endColumn":24},{"ruleId":"76","severity":1,"message":"77","line":21,"column":27,"nodeType":"78","messageId":"79","endLine":21,"endColumn":29},{"ruleId":"76","severity":1,"message":"77","line":23,"column":29,"nodeType":"78","messageId":"79","endLine":23,"endColumn":31},{"ruleId":"80","severity":1,"message":"81","line":39,"column":8,"nodeType":"82","endLine":39,"endColumn":15,"suggestions":"83"},{"ruleId":"76","severity":1,"message":"77","line":25,"column":19,"nodeType":"78","messageId":"79","endLine":25,"endColumn":21},{"ruleId":"76","severity":1,"message":"77","line":26,"column":19,"nodeType":"78","messageId":"79","endLine":26,"endColumn":21},{"ruleId":"76","severity":1,"message":"77","line":27,"column":19,"nodeType":"78","messageId":"79","endLine":27,"endColumn":21},{"ruleId":"76","severity":1,"message":"77","line":28,"column":19,"nodeType":"78","messageId":"79","endLine":28,"endColumn":21},{"ruleId":"76","severity":1,"message":"77","line":52,"column":34,"nodeType":"78","messageId":"79","endLine":52,"endColumn":36},{"ruleId":"76","severity":1,"message":"77","line":53,"column":34,"nodeType":"78","messageId":"79","endLine":53,"endColumn":36},{"ruleId":"76","severity":1,"message":"77","line":54,"column":34,"nodeType":"78","messageId":"79","endLine":54,"endColumn":36},{"ruleId":"76","severity":1,"message":"77","line":55,"column":34,"nodeType":"78","messageId":"79","endLine":55,"endColumn":36},{"ruleId":"84","severity":1,"message":"85","line":22,"column":24,"nodeType":"86","endLine":24,"endColumn":22},{"ruleId":"84","severity":1,"message":"85","line":18,"column":45,"nodeType":"86","endLine":20,"endColumn":21},{"ruleId":"84","severity":1,"message":"85","line":19,"column":24,"nodeType":"86","endLine":21,"endColumn":22},{"ruleId":"72","replacedBy":"87"},{"ruleId":"74","replacedBy":"88"},{"ruleId":"84","severity":1,"message":"85","line":28,"column":24,"nodeType":"86","endLine":30,"endColumn":22},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'LangAnimation'. Either include it or remove the dependency array.","ArrayExpression",["91"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["89"],["90"],"no-global-assign","no-unsafe-negation",{"desc":"92","fix":"93"},"Update the dependencies array to be: [LangAnimation, state]",{"range":"94","text":"95"},[992,999],"[LangAnimation, state]"]