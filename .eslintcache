[{"C:\\Users\\user\\Documents\\GitHub\\chang-jun\\src\\index.js":"1","C:\\Users\\user\\Documents\\GitHub\\chang-jun\\src\\reportWebVitals.js":"2","C:\\Users\\user\\Documents\\GitHub\\chang-jun\\src\\App.js":"3","C:\\Users\\user\\Documents\\GitHub\\chang-jun\\src\\React\\Hello.js":"4","C:\\Users\\user\\Documents\\GitHub\\chang-jun\\src\\React\\Intro.js":"5","C:\\Users\\user\\Documents\\GitHub\\chang-jun\\src\\React\\Project.js":"6","C:\\Users\\user\\Documents\\GitHub\\chang-jun\\src\\React\\Modal\\GaapModal.js":"7","C:\\Users\\user\\Documents\\GitHub\\chang-jun\\src\\React\\Modal\\GDModal.js":"8","C:\\Users\\user\\Documents\\GitHub\\chang-jun\\src\\React\\Modal\\YttModal.js":"9","C:\\Users\\user\\Documents\\GitHub\\chang-jun\\src\\React\\Modal\\QRModal.js":"10"},{"size":500,"mtime":499162500000,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"12"},{"size":329,"mtime":1609678046073,"results":"14","hashOfConfig":"12"},{"size":1193,"mtime":1609610500523,"results":"15","hashOfConfig":"12"},{"size":4826,"mtime":1609695231750,"results":"16","hashOfConfig":"12"},{"size":5279,"mtime":1609695165257,"results":"17","hashOfConfig":"12"},{"size":1702,"mtime":1609692941319,"results":"18","hashOfConfig":"12"},{"size":1223,"mtime":1609692868822,"results":"19","hashOfConfig":"12"},{"size":1464,"mtime":1609692833984,"results":"20","hashOfConfig":"12"},{"size":2503,"mtime":1609692785057,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"72w3ki",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"24"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"24"},"C:\\Users\\user\\Documents\\GitHub\\chang-jun\\src\\index.js",[],["48","49"],"C:\\Users\\user\\Documents\\GitHub\\chang-jun\\src\\reportWebVitals.js",[],"C:\\Users\\user\\Documents\\GitHub\\chang-jun\\src\\App.js",[],"C:\\Users\\user\\Documents\\GitHub\\chang-jun\\src\\React\\Hello.js",["50","51","52","53","54","55"],"import React, { useEffect, useState } from 'react';\r\nimport { useSpring, animated } from 'react-spring'\r\nimport '../App.css';\r\n\r\nconst Hello = () => {\r\n    const [lang, setlang] = useState('Flutter');\r\n    const [state, setState] = useState(false);\r\n\r\n    const props = useSpring({\r\n        fontWeight: 'bold',\r\n        config: { duration: 1400 },\r\n        opacity: state == true ? 0 : 1,\r\n        from: { opacity: state == true ? 1 : 0 },\r\n    })\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            if (lang == 'Flutter') {\r\n                setlang('React-native');\r\n            }\r\n            else if (lang == 'React-native') {\r\n                setlang('하이브리드 앱');\r\n            } else if (lang == '하이브리드 앱') {\r\n                setlang('Flutter');\r\n            }\r\n        }, 3800)\r\n\r\n\r\n    }, [lang])\r\n\r\n    function LangAnimation() {\r\n        setTimeout(() => {\r\n            setState(!state)\r\n        }, 1900)\r\n    }\r\n\r\n    useEffect(() => {\r\n        LangAnimation();\r\n    }, [state])\r\n\r\n    return <div><animated.div style={props}>{lang}</animated.div> Front-End Developer <br /> 김창준의 포트폴리오 입니다</div>\r\n}\r\n\r\nexport default Hello;","C:\\Users\\user\\Documents\\GitHub\\chang-jun\\src\\React\\Intro.js",[],"C:\\Users\\user\\Documents\\GitHub\\chang-jun\\src\\React\\Project.js",["56","57","58","59","60","61","62","63"],"C:\\Users\\user\\Documents\\GitHub\\chang-jun\\src\\React\\Modal\\GaapModal.js",["64"],"import React from 'react';\r\n\r\nimport '../../App.css';\r\nimport image0 from \"../../Image/gaap/0.jpg\";\r\nimport image1 from \"../../Image/gaap/1.jpg\";\r\nimport image2 from \"../../Image/gaap/2.jpg\";\r\nimport image3 from \"../../Image/gaap/3.jpg\";\r\nimport image4 from \"../../Image/gaap/4.jpg\";\r\nimport image5 from \"../../Image/gaap/5.jpg\";\r\nimport image6 from \"../../Image/gaap/6.jpg\";\r\nimport image7 from \"../../Image/gaap/7.jpg\";\r\nimport image8 from \"../../Image/gaap/8.jpg\";\r\nimport image9 from \"../../Image/gaap/9.jpg\";\r\n\r\n\r\nconst GaapModal = () => {\r\n    const data = [image0, image1, image2, image3, image4, image5, image6, image7, image8, image9]\r\n\r\n    return <div>\r\n        <div className='Modal-Image-List' >\r\n            {data.map((imgs, i) => {\r\n                return <img className='Modal-Image' src={imgs} key={i} onClick={() => {\r\n                    window.open(imgs);\r\n                }} />\r\n            })}\r\n        </div>\r\n        <div className='Modal-Details-Text'>\r\n            <p> <li>Google Sign-In과 LOL소환사명을 사용해서 로그인 합니다.</li>\r\n                <li>로그아웃을 하기 전까지 앱 실행시 자동으로 로그인 합니다.</li>\r\n                <li>소환사명 검색 및 전적 확인을 할수 있습니다.</li>\r\n                <li>게임중인 소환사명을 검색하여 인게임 정보를 볼 수 있습니다.</li>\r\n                <li>챔피언 추천 아이템 스킬트리 승률 등을 볼 수 있습니다.</li>\r\n                <li>게시판을 구현했습니다.</li>\r\n                <li>Google Admob을 이용해서 광고를 보여줍니다.</li>\r\n            </p>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default GaapModal;\r\n","C:\\Users\\user\\Documents\\GitHub\\chang-jun\\src\\React\\Modal\\GDModal.js",["65"],"import React from 'react';\r\n\r\nimport '../../App.css';\r\nimport image0 from \"../../Image/GD/0.png\";\r\nimport image1 from \"../../Image/GD/1.png\";\r\nimport image2 from \"../../Image/GD/2.png\";\r\nimport image3 from \"../../Image/GD/3.png\";\r\nimport image4 from \"../../Image/GD/4.png\";\r\nimport image5 from \"../../Image/GD/5.png\";\r\nimport image6 from \"../../Image/GD/6.png\";\r\n\r\n\r\nconst GDModal = () => {\r\n    const data = [image0, image1, image2, image3, image4, image5, image6]\r\n\r\n    return <div>\r\n        <div className='Modal-Image-List' >\r\n            {data.map((imgs, i) => { return <img className='Modal-Image' src={imgs} key={i} onClick={() => {\r\n                    window.open(imgs);\r\n                }}/> })}\r\n        </div>\r\n        <div className='Modal-Details-Text'>\r\n            <p> <li>JSON에서 받아온 값을 이용하여 매장 목록을 확인합니다.</li>\r\n                <li>useContext를 이용하여 장바구니 구현했습니다.</li>\r\n                <li>swiper를 이용한 광고 및 공지사항 화면을 제작했습니다.</li>\r\n                <li>다양한 navigation을 이용해서 화면이동을 합니다.</li>\r\n            </p>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default GDModal;\r\n","C:\\Users\\user\\Documents\\GitHub\\chang-jun\\src\\React\\Modal\\YttModal.js",["66"],"import React from 'react';\r\n\r\nimport '../../App.css';\r\nimport image0 from \"../../Image/Ytt/0.jpg\";\r\nimport image1 from \"../../Image/Ytt/1.jpg\";\r\nimport image2 from \"../../Image/Ytt/2.jpg\";\r\nimport image3 from \"../../Image/Ytt/3.jpg\";\r\nimport image4 from \"../../Image/Ytt/4.jpg\";\r\nimport image5 from \"../../Image/Ytt/5.jpg\";\r\n\r\n\r\n\r\nconst YttModal = () => {\r\n    const data = [image0, image1, image2, image3, image4, image5]\r\n\r\n    return <div>\r\n        <div className='Modal-Image-List' > \r\n            {data.map((imgs, i) => {\r\n                return <img className='Modal-Image' src={imgs} key={i} onClick={() => {\r\n                    window.open(imgs);\r\n                }} />\r\n            })}\r\n        </div>\r\n        <div className='Modal-Details-Text'>\r\n            <p>\r\n                <li>geolocation를 이용하여 기기의 lat long 값을 확인합니다.</li>\r\n                <li>reverse geolocation를 이용하여 기기의 위치명을 얻습니다.</li>\r\n                <li>openweathermap api를 이용하여 날씨 표시합니다.</li>\r\n                <li>async storage로 위치를 저장하고 불러옵니다.</li>\r\n                <li>native ad를사용해서 광고를 표시합니다.</li>\r\n                <li><a href='https://play.google.com/store/apps/details?id=com.loger.ytt'\r\n                    target='blank'>Google Play</a> 에서 확인하기</li>\r\n            </p>\r\n        </div>\r\n    </div >\r\n}\r\n\r\nexport default YttModal;\r\n","C:\\Users\\user\\Documents\\GitHub\\chang-jun\\src\\React\\Modal\\QRModal.js",["67"],"import React from 'react';\r\n\r\nimport '../../App.css';\r\nimport image0 from \"../../Image/QR/0.jpg\";\r\nimport image1 from \"../../Image/QR/1.jpg\";\r\nimport image2 from \"../../Image/QR/2.jpg\";\r\nimport image3 from \"../../Image/QR/3.jpg\";\r\nimport image4 from \"../../Image/QR/4.jpg\";\r\nimport image5 from \"../../Image/QR/5.jpg\";\r\nimport image6 from \"../../Image/QR/6.jpg\";\r\nimport image7 from \"../../Image/QR/7.jpg\";\r\nimport image8 from \"../../Image/QR/8.jpg\";\r\nimport image9 from \"../../Image/QR/9.jpg\";\r\nimport image10 from \"../../Image/QR/10.jpg\";\r\nimport image11 from \"../../Image/QR/11.jpg\";\r\nimport image12 from \"../../Image/QR/12.jpg\";\r\nimport image13 from \"../../Image/QR/13.jpg\";\r\nimport image14 from \"../../Image/QR/14.jpg\";\r\nimport image15 from \"../../Image/QR/15.jpg\";\r\n\r\n\r\nconst QRModal = () => {\r\n    const data = [image0, image1, image2, image3, image4, image5, image6, image7, image8, image9, image10, image11, image12, image13, image14, image15]\r\n\r\n    return <div>\r\n        <div className='Modal-Image-List' >\r\n            {data.map((imgs, i) => {\r\n                return <img className='Modal-Image' src={imgs} key={i} onClick={() => {\r\n                    window.open(imgs);\r\n                }} />\r\n            })}\r\n        </div>\r\n        <div className='Modal-Details-Text'>\r\n            <p>\r\n                <li>개인용과 사업자용으로 나눠져 있습니다.</li>\r\n                <li>개인용 앱에서 문자를 통해 인증을 받아 로그인 합니다.</li>\r\n                <li>QR코드 인식 후 데이터 전송 및 저장합니다.</li>\r\n                <li>async storage로 방문장소를 관리합니다.</li>\r\n                <li>사업자용 앱에서 QR인식 결과를 확인합니다.</li>\r\n                <li>socket을 이용하여 QR체크시 바로 확인 가능합니다.</li>\r\n                <li>사업자 회원가입 시 네이버OCR, 카카오 우편번호 서비스를 이용합니다.</li>\r\n                <li>같은 사업자 번호로 직원 추가 등록 및 삭제가 가능합니다.</li>\r\n                <li><a href='https://play.google.com/store/apps/details?id=com.loger.business_qari'\r\n                    target='blank'>Google Play</a> 에서 사업주용 확인하기</li>\r\n                <li><a href='https://play.google.com/store/apps/details?id=com.loger.person_qari'\r\n                    target='blank'>Google Play</a> 에서 개인용 확인하기</li>\r\n            </p>\r\n        </div>\r\n    </div >\r\n}\r\n\r\nexport default QRModal;\r\n",{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":12,"column":24,"nodeType":"74","messageId":"75","endLine":12,"endColumn":26},{"ruleId":"72","severity":1,"message":"73","line":13,"column":32,"nodeType":"74","messageId":"75","endLine":13,"endColumn":34},{"ruleId":"72","severity":1,"message":"73","line":18,"column":22,"nodeType":"74","messageId":"75","endLine":18,"endColumn":24},{"ruleId":"72","severity":1,"message":"73","line":21,"column":27,"nodeType":"74","messageId":"75","endLine":21,"endColumn":29},{"ruleId":"72","severity":1,"message":"73","line":23,"column":29,"nodeType":"74","messageId":"75","endLine":23,"endColumn":31},{"ruleId":"76","severity":1,"message":"77","line":39,"column":8,"nodeType":"78","endLine":39,"endColumn":15,"suggestions":"79"},{"ruleId":"72","severity":1,"message":"73","line":25,"column":19,"nodeType":"74","messageId":"75","endLine":25,"endColumn":21},{"ruleId":"72","severity":1,"message":"73","line":26,"column":19,"nodeType":"74","messageId":"75","endLine":26,"endColumn":21},{"ruleId":"72","severity":1,"message":"73","line":27,"column":19,"nodeType":"74","messageId":"75","endLine":27,"endColumn":21},{"ruleId":"72","severity":1,"message":"73","line":28,"column":19,"nodeType":"74","messageId":"75","endLine":28,"endColumn":21},{"ruleId":"72","severity":1,"message":"73","line":52,"column":34,"nodeType":"74","messageId":"75","endLine":52,"endColumn":36},{"ruleId":"72","severity":1,"message":"73","line":53,"column":34,"nodeType":"74","messageId":"75","endLine":53,"endColumn":36},{"ruleId":"72","severity":1,"message":"73","line":54,"column":34,"nodeType":"74","messageId":"75","endLine":54,"endColumn":36},{"ruleId":"72","severity":1,"message":"73","line":55,"column":34,"nodeType":"74","messageId":"75","endLine":55,"endColumn":36},{"ruleId":"80","severity":1,"message":"81","line":22,"column":24,"nodeType":"82","endLine":24,"endColumn":22},{"ruleId":"80","severity":1,"message":"81","line":18,"column":45,"nodeType":"82","endLine":20,"endColumn":21},{"ruleId":"80","severity":1,"message":"81","line":19,"column":24,"nodeType":"82","endLine":21,"endColumn":22},{"ruleId":"80","severity":1,"message":"81","line":28,"column":24,"nodeType":"82","endLine":30,"endColumn":22},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'LangAnimation'. Either include it or remove the dependency array.","ArrayExpression",["85"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"86","fix":"87"},"Update the dependencies array to be: [LangAnimation, state]",{"range":"88","text":"89"},[992,999],"[LangAnimation, state]"]